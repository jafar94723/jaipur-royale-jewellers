{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = rootReducer => rootReducer.shopReducer;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]));\n/*\nselectCollection gets called with param\nIf this function gets called \nagain with the same \ncollectionUrlParam, don't \nrerun this function because \nwe'll return the same value as \nlast time, which we've memoized \nso just return the selector \nthat's been stored.\n\n\n*/\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => Object.keys(collections));","map":{"version":3,"sources":["/home/maaz/git_repos/cara-sense-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","selectShop","rootReducer","shopReducer","selectCollections","shop","collections","selectCollection","collectionUrlParam","selectCollectionsForPreview","Object","keys"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAGA,MAAMC,UAAU,GAAGC,WAAW,IAAIA,WAAW,CAACC,WAA9C;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CI,IAAI,IAAIA,IAAI,CAACC,WAF8B,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAGP,OAAO,CAACQ,kBAAkB,IAAIT,cAAc,CACxE,CAACK,iBAAD,CADwE,EAExEE,WAAW,IAAIA,WAAW,CAACE,kBAAD,CAF8C,CAArC,CAAhC;AAKP;;;;;;;;;;;;;;AAeA,OAAO,MAAMC,2BAA2B,GAAGV,cAAc,CACrD,CAACK,iBAAD,CADqD,EAErDE,WAAW,IAAII,MAAM,CAACC,IAAP,CAAYL,WAAZ,CAFsC,CAAlD","sourcesContent":["import {createSelector} from 'reselect';\nimport memoize from 'lodash.memoize';\n\n\nconst selectShop = rootReducer => rootReducer.shopReducer;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector(\n    [selectCollections],\n    collections => collections[collectionUrlParam]\n))\n\n/*\nselectCollection gets called with param\nIf this function gets called \nagain with the same \ncollectionUrlParam, don't \nrerun this function because \nwe'll return the same value as \nlast time, which we've memoized \nso just return the selector \nthat's been stored.\n\n\n*/\n\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => Object.keys(collections)\n)"]},"metadata":{},"sourceType":"module"}